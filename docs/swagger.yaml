definitions:
  health.HealthCheckResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  scraper.TreeNode:
    properties:
      children:
        items:
          $ref: '#/definitions/scraper.TreeNode'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  search.ElementResponse:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  search.SearchResponse:
    properties:
      message:
        type: string
      result:
        $ref: '#/definitions/scraper.TreeNode'
    type: object
info:
  contact: {}
paths:
  /elements:
    get:
      description: Get a list of all available elements
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/search.ElementResponse'
            type: array
      summary: Get all elements
      tags:
      - Elements
  /health:
    get:
      consumes:
      - application/json
      description: Check if the application is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthCheckResponse'
      summary: Health Check
      tags:
      - Health
  /search/bfs:
    get:
      consumes:
      - application/json
      description: Search the recipe of elements using BFS
      parameters:
      - description: Query parameter
        in: query
        name: q
        required: true
        type: string
      - default: "1"
        description: Number of recipes to return
        in: query
        name: num
        type: string
      - default: "false"
        description: Live update
        in: query
        name: live
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/search.SearchResponse'
      summary: BFS search handler
      tags:
      - Search
  /search/bidirectional:
    get:
      consumes:
      - application/json
      description: Search the recipe of elements using Bidirectional Search.
      parameters:
      - description: Target element to search for
        in: query
        name: q
        required: true
        type: string
      - default: "1"
        description: Chooses the Nth found meeting node (sorted) to construct the
          path
        in: query
        name: num
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful search operation.
          schema:
            $ref: '#/definitions/search.SearchResponse'
      summary: Bidirectional search handler
      tags:
      - Search
  /search/dfs:
    get:
      consumes:
      - application/json
      description: Search the recipe of elements using DFS
      parameters:
      - description: Query parameter
        in: query
        name: q
        required: true
        type: string
      - default: "1"
        description: Number of recipes to return
        in: query
        name: num
        type: string
      - default: "false"
        description: Live update
        in: query
        name: live
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/search.SearchResponse'
      summary: DFS search handler
      tags:
      - Search
swagger: "2.0"
